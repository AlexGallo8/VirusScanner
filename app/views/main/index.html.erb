<!-- User Status Section -->
<div class="fixed top-4 right-4 z-50">
  <% if @current_user %>
    <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm shadow-lg rounded-full px-6 py-3 flex items-center space-x-4 animate-fade-in">
      <div class="flex items-center space-x-2">
        <div class="w-8 h-8 rounded-full bg-blue-100 dark:bg-blue-900 flex items-center justify-center">
          <i class="fas fa-user text-blue-600 dark:text-blue-300"></i>
        </div>
        <span class="text-gray-700 dark:text-gray-200"><%= @current_user.email %></span>
      </div>
      <%= button_to sign_out_path, 
          method: :delete, 
          class: "bg-red-100 dark:bg-red-900 hover:bg-red-200 dark:hover:bg-red-800 text-red-600 dark:text-red-300 px-4 py-2 rounded-full transition-all duration-300 flex items-center space-x-2" do %>
        <i class="fas fa-sign-out-alt"></i>
        <span>Logout</span>
      <% end %>
    </div>
  <% end %>
</div>

<div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-blue-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
  <div class="container mx-auto px-4 py-12 animate-fade-in">
    <!-- Header Section -->
    <div class="text-center mb-12 space-y-4">
      <h1 class="text-5xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-blue-400 dark:from-blue-400 dark:to-blue-200">
        Welcome to VirusScanner
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed">
        VirusScanner is a free service that analyzes suspicious files and URLs and facilitates the quick detection of viruses, worms, trojans, and all kinds of malware.
      </p>
    </div>

    <!-- Scan Options Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto">
      <!-- File Scan Card -->
      <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl shadow-xl p-8 transition duration-300 ease-in-out transform hover:scale-102 hover:shadow-2xl">
        <div class="flex items-center space-x-4 mb-6">
          <div class="p-3 rounded-xl bg-blue-100 dark:bg-blue-900">
            <i class="fas fa-file-upload text-blue-600 dark:text-blue-300 text-2xl"></i>
          </div>
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Scan File</h2>
        </div>
        
        <%= form_tag(virus_total_scan_path, multipart: true, class: "space-y-6") do %>
          <div class="border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-xl p-6 transition duration-300 hover:border-blue-500 dark:hover:border-blue-400 group">
            <%= file_field_tag :file, class: "hidden", id: "fileInput" %>
            <label for="fileInput" class="cursor-pointer block w-full">
              <div id="dropText" class="h-40 flex flex-col items-center justify-center space-y-4">
                <div class="w-16 h-16 rounded-full bg-blue-50 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                  <i class="fas fa-cloud-upload-alt text-blue-500 text-3xl"></i>
                </div>
                <p class="text-gray-500 text-center">
                  Drag and drop your file here<br>or click to browse
                </p>
              </div>
              
              <div id="filePreview" class="hidden h-40 flex flex-col items-center justify-center space-y-4">
                <div class="w-16 h-16 rounded-full bg-green-50 flex items-center justify-center animate-bounce">
                  <i class="fas fa-file-alt text-green-500 text-3xl"></i>
                </div>
                <div class="text-center">
                  <p id="fileName" class="text-gray-800 font-medium mb-2"></p>
                  <button type="button" id="removeFile" class="text-red-500 hover:text-red-600 text-sm flex items-center justify-center space-x-1">
                    <i class="fas fa-times"></i>
                    <span>Remove</span>
                  </button>
                </div>
              </div>
            </label>
          </div>

          <div class="flex justify-center space-x-4">
            <% if user_signed_in_with_google? %>
              <%= submit_tag "Scan File", class: "px-6 py-3 bg-blue-600 dark:bg-blue-500 hover:bg-blue-700 dark:hover:bg-blue-600 text-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300" %>
              
              <%= button_tag type: "button",
                    onclick: "openDrivePicker()",
                    class: "px-6 py-3 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-200 border border-gray-200 dark:border-gray-600 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 flex items-center space-x-2" do %>
                 <div class="mb-3 flex items-center justify-center gap-4">
                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24" height="24" viewBox="0 0 48 48">
                      <path fill="#1e88e5" d="M38.59,39c-0.535,0.93-0.298,1.68-1.195,2.197C36.498,41.715,35.465,42,34.39,42H13.61 c-1.074,0-2.106-0.285-3.004-0.802C9.708,40.681,9.945,39.93,9.41,39l7.67-9h13.84L38.59,39z"></path>
                      <path fill="#fbc02d" d="M27.463,6.999c1.073-0.002,2.104-0.716,3.001-0.198c0.897,0.519,1.66,1.27,2.197,2.201l10.39,17.996 c0.537,0.93,0.807,1.967,0.808,3.002c0.001,1.037-1.267,2.073-1.806,3.001l-11.127-3.005l-6.924-11.993L27.463,6.999z"></path>
                      <path fill="#e53935" d="M43.86,30c0,1.04-0.27,2.07-0.81,3l-3.67,6.35c-0.53,0.78-1.21,1.4-1.99,1.85L30.92,30H43.86z"></path>
                      <path fill="#4caf50" d="M5.947,33.001c-0.538-0.928-1.806-1.964-1.806-3c0.001-1.036,0.27-2.073,0.808-3.004l10.39-17.996 c0.537-0.93,1.3-1.682,2.196-2.2c0.897-0.519,1.929,0.195,3.002,0.197l3.459,11.009l-6.922,11.989L5.947,33.001z"></path>
                      <path fill="#1565c0" d="M17.08,30l-6.47,11.2c-0.78-0.45-1.46-1.07-1.99-1.85L4.95,33c-0.54-0.93-0.81-1.96-0.81-3H17.08z"></path>
                      <path fill="#2e7d32" d="M30.46,6.8L24,18L17.53,6.8c0.78-0.45,1.66-0.73,2.6-0.79L27.46,6C28.54,6,29.57,6.28,30.46,6.8z"></path>
                    </svg>
                    Upload from Drive
                  </div>
              <% end %>
            <% else %>
              <%= submit_tag "Scan File", class: "px-6 py-3 bg-blue-600 dark:bg-blue-500 hover:bg-blue-700 dark:hover:bg-blue-600 text-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300" %>
            <% end %>
          </div>
        <% end %>
      </div>

      <!-- URL Scan Card -->
      <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl shadow-xl p-8 transition duration-300 ease-in-out transform hover:scale-102 hover:shadow-2xl">
        <div class="flex items-center space-x-4 mb-6">
          <div class="p-3 rounded-xl bg-purple-100 dark:bg-purple-900">
            <i class="fas fa-link text-purple-600 dark:text-purple-300 text-2xl"></i>
          </div>
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Scan URL</h2>
        </div>

        <%= form_tag(virus_total_scan_path, multipart: true, class: "space-y-6") do %>
          <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
          <div class="relative">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <i class="fas fa-search text-gray-400 dark:text-gray-500"></i>
            </div>
            <%= text_field_tag :url, nil, 
                placeholder: "Enter URL to scan", 
                class: "w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-xl focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 transition-all duration-300" %>
          </div>
          <%= submit_tag "Scan URL", class: "w-full px-6 py-3 bg-purple-600 dark:bg-purple-500 hover:bg-purple-700 dark:hover:bg-purple-600 text-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300" %>
        <% end %>
      </div>
    </div>
  </div>
</div>




<script>
// Add this at the beginning of your script section
let pickerInited = false;
let gisInited = false;
let tokenClient;

// Load the Google API Client and Picker libraries
function loadGoogleLibraries() {
  gapi.load('client:picker', async () => {
    await initClient();
    createPicker();
  });
}

async function initClient() {
  await gapi.client.init({
    apiKey: 'AIzaSyCmZhaaV3SvGMLqsdeaVdQvX3PA4SecMEk',
    discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],
  });
  
  tokenClient = google.accounts.oauth2.initTokenClient({
    client_id: '571196425539-i9sflonmn2m4ssi43dm0fnlv5amjh6d4.apps.googleusercontent.com',
    scope: 'https://www.googleapis.com/auth/drive.file',
    prompt: '', // Remove prompt to use the current session
    callback: '', // defined at request time
  });
  
  gisInited = true;
}

// Remove maybeEnablePicker function since we don't need it anymore

function gisLoaded() {
  pickerInited = true;
}

async function createPicker() {
  const view = new google.picker.View(google.picker.ViewId.DOCS);
  const picker = new google.picker.PickerBuilder()
    .enableFeature(google.picker.Feature.NAV_HIDDEN)
    .setDeveloperKey('AIzaSyCmZhaaV3SvGMLqsdeaVdQvX3PA4SecMEk') // Add developer key
    .setAppId('571196425539') // Use your client ID without the .apps.googleusercontent.com part
    .setOAuthToken(await getAccessToken())
    .addView(view)
    .addView(new google.picker.DocsUploadView())
    .setCallback(pickerCallback)
    .build();
  picker.setVisible(true);
}

// Add this function to get the access token
async function getAccessToken() {
  return new Promise((resolve, reject) => {
    try {
      tokenClient.callback = (response) => {
        if (response.error !== undefined) {
          reject(response);
        }
        resolve(response.access_token);
      };
      // Remove the prompt option to use the current session
      tokenClient.requestAccessToken();
    } catch (err) {
      reject(err);
    }
  });
}

function gisLoaded() {
  pickerInited = true;
}

function maybeEnablePicker() {
  if (pickerInited && gisInited) {
    createPicker();
  }
}

function pickerCallback(data) {
  if (data.action === google.picker.Action.PICKED) {
    const fileId = data[google.picker.Response.DOCUMENTS][0].id;
    const fileName = data[google.picker.Response.DOCUMENTS][0].name;
    
    // Update the file input preview
    const dropText = document.getElementById('dropText');
    const filePreview = document.getElementById('filePreview');
    const fileNameElement = document.getElementById('fileName');
    
    fileNameElement.textContent = fileName;
    dropText.classList.add('hidden');
    filePreview.classList.remove('hidden');
    
    // Add a hidden input with the Google Drive file ID
    const form = document.querySelector('form[action="/virus_total/scan"]');
    let driveFileInput = form.querySelector('input[name="drive_file_id"]');
    if (!driveFileInput) {
      driveFileInput = document.createElement('input');
      driveFileInput.type = 'hidden';
      driveFileInput.name = 'drive_file_id';
      form.appendChild(driveFileInput);
    }
    driveFileInput.value = fileId;
  }
}

function openDrivePicker() {
  loadGoogleLibraries();
}

// Add this script tag at the end of your view
</script>
<script async defer src="https://apis.google.com/js/api.js"></script>
<script async defer src="https://accounts.google.com/gsi/client" onload="gisLoaded()"></script>

<script>
window.onload = function() {
  const dropzone = document.getElementById('dropzone');
  const fileInput = document.getElementById('fileInput');
  const dropText = document.getElementById('dropText');
  const filePreview = document.getElementById('filePreview');
  const fileName = document.getElementById('fileName');
  const removeFile = document.getElementById('removeFile');

  // Gestione drag and drop
  dropzone.addEventListener('dragover', function(e) {
    e.preventDefault();
    e.stopPropagation();
    dropzone.classList.add('border-blue-500');
  });

  dropzone.addEventListener('dragleave', function(e) {
    e.preventDefault();
    e.stopPropagation();
    dropzone.classList.remove('border-blue-500');
  });

  dropzone.addEventListener('drop', function(e) {
    e.preventDefault();
    e.stopPropagation();
    dropzone.classList.remove('border-blue-500');
    
    const files = e.dataTransfer.files;
    if (files.length > 0) {
      handleFile(files[0]);
      fileInput.files = files;
    }
  });

  // Gestione selezione file tramite click
  fileInput.addEventListener('change', function(e) {
    if (this.files.length > 0) {
      handleFile(this.files[0]);
    }
  });

  // Gestione rimozione file
  removeFile.addEventListener('click', function(e) {
    e.preventDefault();
    e.stopPropagation();
    fileInput.value = '';
    dropText.classList.remove('hidden');
    filePreview.classList.add('hidden');
  });

  function handleFile(file) {
    fileName.textContent = file.name;
    dropText.classList.add('hidden');
    filePreview.classList.remove('hidden');
  }
};


document.addEventListener('DOMContentLoaded', function() {
  const forms = document.querySelectorAll('form[action="/virus_total/scan"]');

  
  // Aggiungiamo gli stili CSS necessari
  const style = document.createElement('style');
  style.textContent = `
    .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(4px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
    }

    .progress-bar {
      width: 100%;
      background-color: #e5e7eb;
      border-radius: 9999px;
      height: 1rem;
      overflow: hidden;
    }

    .progress-bar-fill {
      height: 100%;
      background-color: #3b82f6;
      transition: width 0.3s ease-out;
      border-radius: 9999px;
    }
  `;
  document.head.appendChild(style);

  forms.forEach(form => {
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Create loading screen
      const loadingScreen = document.createElement('div');
      loadingScreen.className = 'loading-overlay';
      loadingScreen.innerHTML = `
        <div class="bg-white rounded-lg shadow-xl p-8 max-w-md w-full mx-4">
          <div class="text-center">
            <div class="mb-6">
              <h2 class="text-3xl font-bold text-gray-900 mb-2">Scanning in Progress</h2>
              <p class="text-gray-600">Please wait while we analyze your submission</p>
            </div>
            
            <div class="progress-bar mb-4">
              <div class="progress-bar-fill" style="width: 0%" id="progressBar"></div>
            </div>
            
            <div class="text-lg font-semibold text-gray-700">
              <span id="progressText">0</span>%
            </div>
            
            <div class="mt-6 text-sm text-gray-500" id="statusMessage">
              Initializing scan...
            </div>
          </div>
        </div>
      `;
      
      document.body.appendChild(loadingScreen);

      const progressBar = document.getElementById('progressBar');
      const progressText = document.getElementById('progressText');
      const statusMessage = document.getElementById('statusMessage');
      let progress = 0;

      const updateProgress = () => {
        if (progress < 95) {
          progress += 1;
          progressBar.style.width = `${progress}%`;
          progressText.textContent = progress;
          
          if (progress < 30) {
            statusMessage.textContent = "Initializing scan...";
          } else if (progress < 60) {
            statusMessage.textContent = "Analyzing content...";
          } else if (progress < 90) {
            statusMessage.textContent = "Processing results...";
          } else {
            statusMessage.textContent = "Almost done...";
          }
        }
      };

      const progressInterval = setInterval(updateProgress, 150);

      // Create FormData
      const formData = new FormData(form);
      
      try {
        const response = await fetch('/virus_total/scan', {
          method: 'POST',
          body: formData,
          headers: {
            'Accept': 'application/json',
            'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
          }
        });
        
        const data = await response.json();
        
        while (true) {
          const statusResponse = await fetch(`/virus_total/scan?check_status=true&scan_id=${data.scan_id}`, {
            headers: {
              'Accept': 'application/json',
              'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
            }
          });
          
          const statusData = await statusResponse.json();
          
          if (statusData.status === 'completed') {
            progress = 100;
            progressBar.style.width = '100%';
            progressText.textContent = '100';
            statusMessage.textContent = 'Scan completed!';
            
            await new Promise(resolve => setTimeout(resolve, 500));
            window.location.href = `/virus_total/scan?scan_id=${data.scan_id}`;
            break;
          }
          
          await new Promise(resolve => setTimeout(resolve, 2000));
        }
      } catch (error) {
        console.error('Error:', error);
        statusMessage.textContent = 'An error occurred. Please try again.';
        statusMessage.classList.add('text-red-500');
        await new Promise(resolve => setTimeout(resolve, 2000));
      } finally {
        clearInterval(progressInterval);
        loadingScreen.remove();
      }
    });
  });
});

</script>